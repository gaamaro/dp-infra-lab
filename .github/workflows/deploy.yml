name: Deploy EC2 com Terraform

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      ambiente:
        description: "Ambiente de destino"
        required: true
        default: "homelab"

env:
  VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
  VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
  TF_INPUT: false
  TF_IN_AUTOMATION: true

jobs:
  deploy:
    name: 🚀 Deploy EC2 com Terraform
    runs-on: self-hosted

    steps:
      - name: 📦 Checkout do código
        uses: actions/checkout@v3

      - name: 🧰 Instala Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: 🔐 Exporta credenciais do Vault e seta variáveis
        run: |
          echo "🔑 Lendo AWS credentials do Vault..."
          CREDS=$(curl -s --header "X-Vault-Token: $VAULT_TOKEN" \
            --request GET \
            $VAULT_ADDR/v1/kv/data/aws)

          export AWS_ACCESS_KEY_ID=$(echo "$CREDS" | jq -r '.data.data.access_key')
          export AWS_SECRET_ACCESS_KEY=$(echo "$CREDS" | jq -r '.data.data.secret_key')

          echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> $GITHUB_ENV
          echo "✅ Credenciais setadas com sucesso"

      - name: ⚙️ Terraform Init
        run: terraform init

      - name: 📋 Terraform Plan
        run: terraform plan -out=/tmp/tfplan.binary -var="vault_token=$VAULT_TOKEN" -var="vault_addr=$VAULT_ADDR"

      - name: 🛠️ Garante que a chave SSH está registrada na AWS
        run: |
          echo "🔐 Buscando chave do Vault..."
          VAULT_SSH=$(curl -s --header "X-Vault-Token: $VAULT_TOKEN" \
            --request GET \
            $VAULT_ADDR/v1/kv/data/ssh-default)

          KEY_NAME=$(echo "$VAULT_SSH" | jq -r '.data.data.key_name')
          PUBLIC_KEY_RAW=$(echo "$VAULT_SSH" | jq -r '.data.data.public_key')
          PUBLIC_KEY=$(echo "$PUBLIC_KEY_RAW" | base64 | tr -d '\n')

          echo "🔍 Verificando se a chave '$KEY_NAME' já existe na AWS..."
          if aws ec2 describe-key-pairs --key-names "$KEY_NAME" > /dev/null 2>&1; then
            echo "✅ Chave '$KEY_NAME' já existe na AWS."
          else
            echo "🚀 Importando chave '$KEY_NAME' para a AWS..."
            aws ec2 import-key-pair \
              --key-name "$KEY_NAME" \
              --public-key-material "$PUBLIC_KEY"
            echo "⏳ Aguardando a chave ser propagada pela AWS..."

            for i in {1..10}; do
              if aws ec2 describe-key-pairs --key-names "$KEY_NAME" > /dev/null 2>&1; then
                echo "✅ Chave '$KEY_NAME' agora está disponível."
                break
              fi
              echo "⏱️ Tentando novamente em 3 segundos..."
              sleep 3
            done
          fi

      - name: 🚀 Terraform Apply
        run: terraform apply -auto-approve /tmp/tfplan.binary
