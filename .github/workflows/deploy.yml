name: Deploy EC2 com Terraform

on:
  push:
    branches:
      - main
  workflow_dispatch:  # 👈 permite execução manual pelo botão no GitHub
    inputs:
      ambiente:
        description: "Ambiente de destino"
        required: true
        default: "homelab"

env:
  VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
  VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
  TF_INPUT: false
  TF_IN_AUTOMATION: true

jobs:
  terraform:
    name: Apply Terraform
    runs-on: self-hosted

    steps:
      - name: 📦 Checkout do código
        uses: actions/checkout@v3

      - name: 🧰 Instala Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: 🔐 Configura credenciais de ambiente
        run: |
          echo "VAULT_ADDR=$VAULT_ADDR" >> $GITHUB_ENV
          echo "VAULT_TOKEN=$VAULT_TOKEN" >> $GITHUB_ENV
      
      - name: 🔐 Exporta AWS credentials do Vault para o ambiente
        run: |
          echo "🔎 Buscando credenciais AWS do Vault..."
          CREDS=$(curl -s --header "X-Vault-Token: $VAULT_TOKEN" \
            --request GET \
            $VAULT_ADDR/v1/kv/data/aws)

          export AWS_ACCESS_KEY_ID=$(echo "$CREDS" | jq -r '.data.data.access_key')
          export AWS_SECRET_ACCESS_KEY=$(echo "$CREDS" | jq -r '.data.data.secret_key')

          # Exporta para o GitHub Actions
          echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> $GITHUB_ENV

          echo "✅ Credenciais carregadas no runner."

      - name: 🧪 leitura das credenciais no Vault
        run: |
          echo "🔎 Verificando o conteúdo retornado do Vault..."
          curl -s --header "X-Vault-Token: $VAULT_TOKEN" \
            --request GET \
            $VAULT_ADDR/v1/kv/data/aws | jq

      - name: 🔍 Verificar credenciais carregadas do Vault
        run: |
          aws sts get-caller-identity

      - name: ⚙️ Terraform Init com backend S3
        run: terraform init

      - name: 📋 Terraform Plan
        run: terraform plan

      - name: 🚀 Terraform Apply
        run: terraform apply -auto-approve
